error: temporary with significant `Drop` can be early dropped
  --> $DIR/significant_drop_tightening.rs:17:13
   |
LL | /     {
LL | |         let mutex = Mutex::new(1i32);
LL | |         let lock = mutex.lock().unwrap();
   | |             ^^^^
LL | |         let rslt0 = lock.abs();
LL | |         let rslt1 = lock.is_positive();
LL | |         do_heavy_computation_that_takes_time((rslt0, rslt1));
LL | |     }
   | |_____- temporary `lock` is currently being dropped at the end of its contained scope
   |
   = note: this might lead to unnecessary resource contention
   = note: `-D clippy::significant-drop-tightening` implied by `-D warnings`
help: drop the temporary after the end of its last usage
   |
LL ~         let rslt1 = lock.is_positive();
LL +         drop(lock);
   |

error: temporary with significant `Drop` can be early dropped
  --> $DIR/significant_drop_tightening.rs:38:13
   |
LL | /     {
LL | |         let mutex = Mutex::new(1i32);
LL | |         let lock = mutex.lock().unwrap();
   | |             ^^^^
LL | |         let rslt0 = lock.abs();
LL | |         do_heavy_computation_that_takes_time(rslt0);
LL | |     }
   | |_____- temporary `lock` is currently being dropped at the end of its contained scope
   |
   = note: this might lead to unnecessary resource contention
help: merge the temporary construction with its single usage
   |
LL ~         
LL +         let rslt0 = mutex.lock().unwrap().abs();
   |
help: remove separated single usage
   |
LL -         let rslt0 = lock.abs();
LL +         
   |

error: temporary with significant `Drop` can be early dropped
  --> $DIR/significant_drop_tightening.rs:44:17
   |
LL | /     {
LL | |         let mutex = Mutex::new(vec![1i32]);
LL | |         let mut lock = mutex.lock().unwrap();
   | |                 ^^^^
LL | |         lock.clear();
LL | |         do_heavy_computation_that_takes_time(());
LL | |     }
   | |_____- temporary `lock` is currently being dropped at the end of its contained scope
   |
   = note: this might lead to unnecessary resource contention
help: merge the temporary construction with its single usage
   |
LL ~         
LL +         mutex.lock().unwrap().clear();
   |
help: remove separated single usage
   |
LL -         lock.clear();
LL +         
   |

error: aborting due to 3 previous errors

